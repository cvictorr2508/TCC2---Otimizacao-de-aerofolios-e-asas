% Intuito: checar se implementei direito o CST em código
clc,clear,fclose('all');

% Modificação: agora cada superfície tem seu próprio raio do bordo de ataque
% Modificação: remoção dos fatores de escala

% Notas:
% Sendo n o grau do polinomio, temos n+1 variáveis de design
% Fixemos o polinômio em grau 4.
n = 4;

% Imprimir coordenadas?
op = 0;

% Alguns parâmetros
np = 20; % Número de pontos
c = 1; % Comprimento da corda
%x = cosspace_half(0,c,np); 
x = cosspace(0,c,np); 
y1 = zeros(1,length(x));
N1 = 0.5;
N2 = 1;

% Informações do extradorso
Rle1 = .01;
beta1 = 5;
Dz1 = 0;

A1 = zeros(n+1,1);
A1(1) = sqrt(2*Rle1/c);
A1(2) = 0.2;
A1(3) = 0.2;
A1(4) = 0.2;
A1(5) = tand(beta1) + Dz1/c;
%f1 = 0.1;
%A1 = A1*f1;

% Informações do intradorso
Rle2 = .01;
beta2 = 5;
Dz2 = 0;

A2 = zeros(n+1,1);
A2(1) = sqrt(2*Rle2/c);
A2(2) = .2;
A2(3) = .2;
A2(4) = .2;
A2(5) = tand(beta2) + Dz2/c;
%f2 = 0.1;
%A2 = A2*f2;



%% Extradorso ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for p = 1:np
    
    % Calcular o polinômio de Bernstein
    sum = 0;
    for r = 0:n
        K = factorial(n)/(factorial(r)*factorial(n-r));
        sum = sum + A1(r+1)*K*x(p)^r*(1-x(p))^(n-r);
    end
    
    % Calcular a ordenada com as funções class e shape ao mesmo tempo
    y1(p) = x(p)^N1*(1-x(p))^N2*sum + x(p)*Dz1/c;
    
end

%plot(x,y1),grid on,hold on,axis equal



%% Intradorso ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for p = 1:np
    
    % Calcular o polinômio de Bernstein
    sum = 0;
    for r = 0:n
        K = factorial(n)/(factorial(r)*factorial(n-r));
        sum = sum + A2(r+1)*K*x(p)^r*(1-x(p))^(n-r);
    end
    
    % Calcular a ordenada com as funções class e shape ao mesmo tempo
    y2(p) = -x(p)^N1*(1-x(p))^N2*sum + x(p)*Dz2/c;

end


%plot(x,y2)

figure(1),clf
coo = [flip(x') flip(y1');
       x(2:end)' y2(2:end)'];
plot(coo(:,1),coo(:,2),'k','linewidth',2),grid on,axis equal,hold on
%scatter(coo(:,1),coo(:,2))



if op == 1
    ID = fopen('coordenadas.dat','w');
    fprintf(ID,'%f %f\n',coo');
    fclose(ID);
end

%set(gca,'xlim',[0,1]),set(gca,'ylim',[-0.1,0.2]),saveas(gcf,'aoba.png')


% Testar com a função que eu achei na internets
uuh = 0;
if uuh == 1
% Input  : wl = CST weight of lower surface
%          wu = CST weight of upper surface
%          dz = trailing edge thickness
% Output : coord = set of x-y coordinates of airfoil generated by CST

    wl = 1;
    wu = 1;
    dz = 0;
    N = 100;
    [coord] = CST_airfoil(wl,wu,dz,N);
    scatter(coord(:,1),coord(:,2)*f1)
    
endif



