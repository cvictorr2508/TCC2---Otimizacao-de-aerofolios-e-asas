% Intuito: checar se implementei direito o CST em código
clc,clear,fclose('all');
% Modificação: implementar método para alterar o grau do polinômio e, por sua 
% vez, o número de variáveis


% Notas:
% Sendo n o grau do polinomio, temos n+1 variáveis de design (não considerando
% o delta z)
n = 4;

% Imprimir coordenadas?
op = 0;

% Alguns parâmetros
np = 80; % Número de pontos
c = 1; % Comprimento da corda
x = cosspace_half(0,c,np); 
y1 = zeros(1,length(x)); y2 = y1;
N1 = 0.5;
N2 = 1;

% Configurações fixas
Rle = 1;
beta1 = 30; beta2 = 10;
Dz1 = 0; Dz2 = 0;
f1 = 0.1; f2 = 0.1;
            
% Definir vetor de pesos/variáveis de design
A1 = zeros(1,n+1); A2 = A1;
disp(['Inserir pesos intermediários do extradorso (total: ' num2str(n-1) ')'])
for i = 2:n
    A1(i) = input(['Número ' num2str(i) ': ']);
end
disp(['Inserir pesos intermediários do intradorso (total: ' num2str(n-1) ')'])
for i = 2:n
    A2(i) = input(['Número ' num2str(i) ': ']);
end

A1(1) = sqrt(2*Rle/c); A2(1) = A1(1);
A1(n+1) = tand(beta1) + Dz1/c; A2(n+1) = tand(beta2) + Dz2/c;


%% Extradorso ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for p = 1:np
    
    % Calcular o polinômio de Bernstein
    sum = 0;
    for r = 0:n
        K = factorial(n)/(factorial(r)*factorial(n-r));
        sum = sum + A1(r+1)*K*x(p)^r*(1-x(p))^(n-r);
    end
    
    % Calcular a ordenada com as funções class e shape ao mesmo tempo
    y1(p) = (x(p)^N1*(1-x(p))^N2*sum + x(p)*Dz1/c)*f1;
end

figure(1),clf
%plot(x,y1),grid on,hold on,axis equal



%% Intradorso ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
for p = 1:np
    
    % Calcular o polinômio de Bernstein
    sum = 0;
    for r = 0:n
        K = factorial(n)/(factorial(r)*factorial(n-r));
        sum = sum + A2(r+1)*K*x(p)^r*(1-x(p))^(n-r);
    end
    
    % Calcular a ordenada com as funções class e shape ao mesmo tempo
    y2(p) = -(x(p)^N1*(1-x(p))^N2*sum + x(p)*Dz2/c)*f2;
    
end


%plot(x,y2)

coo = [flip(x') flip(y1');
       x(2:end)' y2(2:end)'];
plot(coo(:,1),coo(:,2)),grid on,axis equal,hold on
scatter(coo(:,1),coo(:,2))



if op == 1
    ID = fopen('coordenadas.txt','w');
    fprintf(ID,'%f %f\n',coo');
    fclose(ID);
end



% Testar com a função que eu achei na internets
uuh = 0;
if uuh == 1
% Input  : wl = CST weight of lower surface
%          wu = CST weight of upper surface
%          dz = trailing edge thickness
% Output : coord = set of x-y coordinates of airfoil generated by CST

    wl = 1;
    wu = 1;
    dz = 0;
    N = 100;
    [coord] = CST_airfoil(wl,wu,dz,N);
    scatter(coord(:,1),coord(:,2)*f1)
    
endif
    

    



